{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MN-CuadernoNotas-SistemasEcuaciones-MétodosIterativos","provenance":[{"file_id":"1IIL33xjyCO5TLdJ--g9vNHGIer8289W5","timestamp":1645100754048},{"file_id":"1Y9kcTeG9fDfYNpUQGhhRdgUfpfaMx-bv","timestamp":1645007439743},{"file_id":"12hxvrDGbdkdVo1O_mxG_-cQv443s5DlC","timestamp":1644849495161},{"file_id":"1XkDhakXuHdvJx3S3g4do2xOz8bHGzMre","timestamp":1644380017289},{"file_id":"1fk9zU9RRsjlZDg2iPfz80JUZtPfqyaU0","timestamp":1644178176081}],"collapsed_sections":["s5aTHW9f8G5i","qd0V3lNr-cEB","D_ugIWbNASwD","w3NRS4IiBZzM","Nn0ddkNiROKB","dvVymk4SRZM5","aLdRGNlZRHbE","npTxqzSfaABr","-_294UiXdE0t","MOcT3BtJgAkV","cYlBNMPp7gA5"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Cuaderno de Notas de Métodos Numéricos\n","## Sistemas de ecuaciones lineales: métodos directos\n","### Prof. Jorge I. Zuluaga\n"],"metadata":{"id":"ACr_iF4176ms"}},{"cell_type":"markdown","source":["#### Ejecutarme siempre"],"metadata":{"id":"s5aTHW9f8G5i"}},{"cell_type":"markdown","source":["A continuación descargamos en el espacio virtual de este cuaderno todos los archivos necesarios para que las notas del curso funcionen bien:"],"metadata":{"id":"oEqSBbXl-gP3"}},{"cell_type":"code","source":["!git clone https://github.com/JorgeZuluaga/NotasMetodosNumericos\n","!ln -s NotasMetodosNumericos mn\n","!make -C mn pull"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y2EhfbwH8Ji0","executionInfo":{"status":"ok","timestamp":1646055832955,"user_tz":300,"elapsed":2553,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKsGLaaxLlXgj2yGrtJEW9mVZpbk2HVUqvhfojWdFXTrIyyrrDd-Ac9UeSaKzIQw1lm2aHJLXbKGuiGVAAXaJuBw9e3vcVHV05LUQ6mSbfhfSul0zcSQxJCfgephLqdnrr9jmxc16bOoJ1EQvdMocOWa5Mq19xZbxqzujFkruuWu2SBETqiHwpEDozmflrMznFIyfEjCJ1s3qENBT_l81xHJzK5-evtRIDJyv7S3Fh8PSHCvLidVNFRpXz5wshkb90ZD9_zSJwWWv3LDIn3k9dVV0o1R25NroGVy6VowM-9zd6wYhw5Evuj69DGentxrz-WR-StQ7LrJsN-GBNBDfkpJPztacjZkzrp3_3I3IDYN2nMW29b-pdQ4UZ_GThr2ABQpBLHrl1hIq5COcM9m5aNdzkoLEE8IuxXtZtS_2tdHMSaclrMXg7MycVGgC8rRE9eTyaH1Kw77O6H4s9LsBrNy5wS-2sHwSy_yYr6eMJ2E4NAgLEHm0FerNgPh7bOkiwByOU_FeATBjdGmjdMJ88UTFgCKsgJzvz05QmWYuugDJmXl8OIrQq4WFDkY0v3SRQqCZLG65Oqantfkk4SsZLirYOpRAhAGh14lJkdhG1b6Ie7qZpv2N0GBBPgEqXHqBJ9O98HasMz5ay2YX51GCVIbxghb-8gQYwnkOOwrYAThP3T2jKDV473kq42XEvbKOiF2p7gzYpHOYokzNRp9pgKLvDs1_CcTEKJ_1yyAC5ZR_ol-F28Vwi1i9A6Xk9MMsupak=s64","userId":"14268130563590845195"}},"outputId":"e65deb12-ef37-4e61-f1b0-f4fc8aae4a39"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'NotasMetodosNumericos'...\n","remote: Enumerating objects: 108, done.\u001b[K\n","remote: Counting objects: 100% (108/108), done.\u001b[K\n","remote: Compressing objects: 100% (85/85), done.\u001b[K\n","remote: Total 108 (delta 46), reused 82 (delta 20), pack-reused 0\u001b[K\n","Receiving objects: 100% (108/108), 8.53 MiB | 19.32 MiB/s, done.\n","Resolving deltas: 100% (46/46), done.\n","make: Entering directory '/content/NotasMetodosNumericos'\n","git reset --hard HEAD\n","HEAD is now at 876de31 Commit\n","git pull origin master\n","From https://github.com/JorgeZuluaga/NotasMetodosNumericos\n"," * branch            master     -> FETCH_HEAD\n","Already up to date.\n","make: Leaving directory '/content/NotasMetodosNumericos'\n"]}]},{"cell_type":"markdown","source":["## Un vistazo de la clase"],"metadata":{"id":"qd0V3lNr-cEB"}},{"cell_type":"markdown","source":["  Qué veremos en esta clase:\n","\n","  - Motivación.\n","  - Sistemas de ecuaciones teoría general.\n","  - Eliminación de Gauss.\n","  - Algoritmo de eliminación de Gauss.\n","  \n","  Para leer en el libro: secciónes 6.1 \"sistemas de ecuaciones lineales\" (hasta conteo de ecuaciones).  "],"metadata":{"id":"GMuDTK_T-fAm"}},{"cell_type":"markdown","source":["## Métodos iterativos"],"metadata":{"id":"D_ugIWbNASwD"}},{"cell_type":"markdown","source":["- La eliminación de Gauss es un método que permite obtener la solución exacta a un sistema de ecuaciones lineales.  El método funciona bien para sistemas de ecuaciones pequeñas.\n","\n","- Sin embargo en el caso de un sistema de ecuaciones realmente grande, la eliminación gaussiana toma muchas operaciones para realizarse y es computacionalmente impráctico.\n","\n","- En estos casos es mejor utilizar los denominados **métodos iterativos** que permiten obtener en un proceso de aproximaciones sucesivas, la solución aproximada al sistema.\n","\n","- Los métodos iterativos funcionan como lo vimos, por ejemplo, en el caso de las ecuaciones de una variable.\n","\n","  - Considere el caso, por ejemplo, de la solución a la ecuación $f(x)=x-\\sin x=0$.\n","\n","  - El método de punto fijo comienza por asumir un valor inicial para la solución, la *adivinanza*.  Por ejemplo: $x^{(0)}=1$.\n","\n","  - A continuación, usando la misma ecuación que queremos resolver.  Para ello primero despejamos $x$: \n","\n","   $$\n","   x=\\sin x\n","   $$\n","\n","  - El nuevo valor de la aproximación será:\n","\n","   $$\n","   x^{(1)} = \\sin x^{(0)} = \\sin 1 = 0.84147\n","   $$\n","\n","  - Con esta nueva aproximación podemos calcular la siguiente aproximación:\n","\n","   $$\n","   x^{(2)} = \\sin x^{(1)} = \\sin 0.84147 = 0.74562\n","   $$\n","\n","  - Y así sucesivamente.  El método *iterativo* de punto fijo consiste entonces en aplicar la ecuación iterativa:\n","\n","   $$\n","   x^{(k+1)} = \\sin x^{(k)}\n","   $$\n","\n"," - Para evaluar la convergencia del método se utiliza la comparación entre aproximaciones sucesivas.  En el caso anterior por ejemplo, el error en el paso 2 de la aproximación es:\n","\n","   $$\n","   e^{(2)} = |0.74562-0.84147|/0.74562 = 0.12855 = 12.855\\%\n","   $$\n","\n"," - En general, el error relativo en el paso $k$-esimo será:\n","\n","   $$\n","   e^{(k)} = \\frac{|x^{(k)}-x^{(k-1)}|}{|x^{(k)}|}\n","   $$"],"metadata":{"id":"f8boC4W6AVtZ"}},{"cell_type":"markdown","source":["## Método de Jacobi"],"metadata":{"id":"w3NRS4IiBZzM"}},{"cell_type":"markdown","source":["### Un ejemplo ilustrativo"],"metadata":{"id":"Nn0ddkNiROKB"}},{"cell_type":"markdown","source":["- El método de Jacobi es el método iterativo más sencillo para resolver sistemas lineales.  Para ilustrarlo consideremos el siguiente ejemplo:\n","\n","- **Ejemplo**.  Resolver el siguiente sistema de ecuaciones lineales \n","\n","  $$\n","  \\begin{array}{lcl}\n","E_{1}: & 10 x_{1}-x_{2}+2 x_{3} & =6 \\\\\n","E_{2}: & -x_{1}+11 x_{2}-x_{3}+3 x_{4}=25 \\\\\n","E_{3}: & 2 x_{1}-x_{2}+10 x_{3}-x_{4}=-11 \\\\\n","E_{4}: & \\quad 3 x_{2}-x_{3}+8 x_{4}=15\n","\\end{array}\n","  $$\n","  usando para ello: a) eliminación gaussiana y b) método de Jacobi hasta conseguir una precisión menor a 10%.\n","\n","- **Solución**.\n","\n","  - El método de eliminación gaussiana se deja al/a lector/a.  Para mostrar el sistema equivalente en la forma de **matriz triangular superior** usaremos el algorítmo visto en la clase anterior:"],"metadata":{"id":"FRjwzl32Bbj0"}},{"cell_type":"code","source":["import numpy as np\n","def eliminacion_gaussiana(A,b):\n","  \n","  #Número de elementos\n","  n = len(b)\n","\n","  for k in range(0,n-1):\n","    for i in range(k+1,n):\n","      if A[i,k] != 0.0:\n","        lam = A[i,k]/A[k,k]\n","        A[i,k+1:n] = A[i,k+1:n] - lam*A[k,k+1:n]\n","        b[i] = b[i] - lam*b[k]\n","  \n","  #Sustitución hacia atrás: al final b queda con \n","  x = np.copy(b)\n","  for k in range(n-1,-1,-1):\n","    x[k] = (x[k] - np.dot(A[k,k+1:n],x[k+1:n]))/A[k,k]\n","  \n","  #Matriz extendida\n","  Atilde=np.zeros((n,n+1))\n","  Atilde[:,:-1]=A\n","  for k in range(1,n):\n","    for i in range(k):\n","      Atilde[k,i]=0\n","  Atilde[:,-1]=np.transpose(b)\n","\n","  return Atilde,x"],"metadata":{"id":"idHaobdWEK9M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["A=np.array([[10.,-1.,2.,0.],[-1.,11.,-1.,3.],[2.,-1.,10.,-1.],[0.,3.,-1.,8.]])\n","b=np.array([6.,25.,-11.,15.])\n","At,xt=eliminacion_gaussiana(A,b)\n","At,xt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vq7joeRQEaBu","executionInfo":{"status":"ok","timestamp":1653499827217,"user_tz":300,"elapsed":16,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"a0978a44-0ed0-4784-b86b-c7ce1cd0666b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[ 10.        ,  -1.        ,   2.        ,   0.        ,\n","           6.        ],\n","        [  0.        ,  10.9       ,  -0.8       ,   3.        ,\n","          25.6       ],\n","        [  0.        ,   0.        ,   9.5412844 ,  -0.77981651,\n","         -10.32110092],\n","        [  0.        ,   0.        ,   0.        ,   7.11057692,\n","           7.11057692]]), array([ 1.,  2., -1.,  1.]))"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["- El método de Jacobi comienza por tomar el sistema de ecuaciones original y, como hicimos por ejemplo en el método de punto fijo, despejar las variables que queremos encontrar.\n","\n","- Como cada ecuación contiene al menos una vez cualquiera de las variables que se quieren despejar, la estrategia del método de Jacobi es despejar: de la primera ecuación, la primera variable, de la segunda la segunda, y así sucesivamente.\n","\n","- El sistema original era:\n","\n","  $$\n","  \\begin{array}{lcl}\n","E_{1}: & 10 x_{1}-x_{2}+2 x_{3} & =6 \\\\\n","E_{2}: & -x_{1}+11 x_{2}-x_{3}+3 x_{4}=25 \\\\\n","E_{3}: & 2 x_{1}-x_{2}+10 x_{3}-x_{4}=-11 \\\\\n","E_{4}: & \\quad 3 x_{2}-x_{3}+8 x_{4}=15\n","\\end{array}\n","  $$\n","\n","- Despejando las variables queda:\n","\n","  $$\n","  \\begin{aligned}\n","x_{1} &=\\frac{1}{10} x_{2}-\\frac{1}{5} x_{3}+\\frac{3}{5} \\\\\n","x_{2} &=\\frac{1}{11} x_{1}+\\frac{1}{11} x_{3}-\\frac{3}{11} x_{4}+\\frac{25}{11} \\\\\n","x_{3} &=-\\frac{1}{5} x_{1}+\\frac{1}{10} x_{2}+\\frac{1}{10} x_{4}-\\frac{11}{10} \\\\\n","x_{4} &=-\\frac{3}{8} x_{2}+\\frac{1}{8} x_{3}+\\frac{15}{8}\n","\\end{aligned}\n","  $$\n","\n","- Ahora vamos a partir de una *adivinanza*.  Solo que en este caso debemos adivinar todos los valores de $x$, es decir nuestra adivinanza es un vector columna:\n","\n","  $$\n","  \\mathbf{x}^{(0)}=\\left[\\begin{array}{c}\n","0 \\\\\n","0 \\\\\n","0 \\\\\n","0 \\\\\n","0\n","\\end{array}\\right]\n","  $$\n","  otra manera de escribirlo es $\\mathbf{x}^{(0)}=(0,0,0,0)^t$ donde la $t$ indica *transpuesta*.\n","\n","- Si reemplazamos los valores de la adivinanza en las ecuaciones anteriores podemos obtener una aproximación nueva para el valor de las cariables:\n","\n","  $$\n","  \\begin{aligned}\n","x_{1}^{(1)} &=\\frac{1}{10} x_{2}^{(0)}-\\frac{1}{5} x_{3}^{(0)}+\\frac{3}{5} \\\\\n","x_{2}^{(1)} &=\\frac{1}{11} x_{1}^{(0)}+\\frac{1}{11} x_{3}^{(0)}-\\frac{3}{11} x_{4}^{(0)}+\\frac{25}{11} \\\\\n","x_{3}^{(1)} &=-\\frac{1}{5} x_{1}^{(0)}+\\frac{1}{10} x_{2}^{(0)}+\\frac{1}{10} x_{4}^{(0)}-\\frac{11}{10} \\\\\n","x_{4}^{(1)} &=-\\frac{3}{8} x_{2}^{(0)}+\\frac{1}{8} x_{3}^{(0)}+\\frac{15}{8}\n","\\end{aligned}\n","  $$\n","\n","- Reemplazando $\\mathbf{x}^{(0)}$ da:\n","\n","  $$\n","  \\begin{aligned}\n","x_{1}^{(1)} &=0.6\\\\\n","x_{2}^{(1)} &=2.2727\\\\\n","x_{3}^{(1)} &=-1.1000\\\\\n","x_{4}^{(1)} &=1.8750\n","\\end{aligned}\n","  $$\n","\n","- Podemos repetir el procedimiento anterior con los nuevos valores calculados:\n","\n","  $$\n","  \\begin{aligned}\n","x_{1}^{(2)} &=\\frac{1}{10} x_{2}^{(1)}-\\frac{1}{5} x_{3}^{(1)}+\\frac{3}{5} \\\\\n","x_{2}^{(2)} &=\\frac{1}{11} x_{1}^{(1)}+\\frac{1}{11} x_{3}^{(1)}-\\frac{3}{11} x_{4}^{(1)}+\\frac{25}{11} \\\\\n","x_{3}^{(2)} &=-\\frac{1}{5} x_{1}^{(1)}+\\frac{1}{10} x_{2}^{(1)}+\\frac{1}{10} x_{4}^{(1)}-\\frac{11}{10} \\\\\n","x_{4}^{(2)} &=-\\frac{3}{8} x_{2}^{(1)}+\\frac{1}{8} x_{3}^{(1)}+\\frac{15}{8}\n","\\end{aligned}\n","  $$\n","\n","- Reemplazando los valores obtenidos antes da:\n","\n","  $$\n","  \\begin{aligned}\n","x_{1}^{(2)} &=1.0473\\\\\n","x_{2}^{(2)} &=1.7159\\\\\n","x_{3}^{(2)} &=-0.8052\\\\\n","x_{4}^{(2)} &=0.8852\n","\\end{aligned}\n","  $$\n","\n","- En este punto podemos preguntarnos ¿cuál es el error relativo en esta respuesta aproximada?\n","\n"],"metadata":{"id":"X4E3xN0KE2zL"}},{"cell_type":"markdown","source":["### Calculo del error de convergencia"],"metadata":{"id":"dvVymk4SRZM5"}},{"cell_type":"markdown","source":["- En el caso de la solución a una ecuación de una variable, la comparación es sencilla, simplemente restamos el valor en el paso actual con el valor en el paso anterior.  Pero ¿qué pasa cuando son muchos valores para comparar?\n","\n","- Hay dos maneras de comparar dos vectores $\\mathbf{x}=(x_1,x_2,\\cdots,x^n)^t$ y $\\mathbf{y}=(y_1,y_2,\\cdots,y^n)^t$:\n","\n","  - **La norma euclidiana** $\\|\\mathbf{x}-\\mathbf{y}\\|_{2}$.  Esta norma permite calcular la *distancia* entre dos vectores usando una definición similar a la distancia entre dos puntos del especio:\n","   $$\n","   \\|\\mathbf{x}-\\mathbf{y}\\|_{2}=\\left\\{\\sum_{i=1}^{n} (x_{i}-y_{i})^{2}\\right\\}^{1 / 2}\n","   $$\n","\n","  - **La norma máxima** $\\|\\mathbf{x}-\\mathbf{y}\\|_{\\infty}$.  Esta norma permite calcular la *distancia* entre dos vectores usando una definición similar a la distancia entre dos puntos del especio:\n","   $$\n","   \\|\\mathbf{x}-\\mathbf{y}\\|_{\\infty}=\\operatorname{máx}_{1 \\leq i \\leq n}\\left|x_{i}-y_{i}\\right|\n","   $$\n","\n","- Con la norma podemos calcular el error relativo por ejemplo en un procedimiento iterativo como el método de Jacobi así:\n","\n","  $$\n","  e^{(k)}=\\frac{\\left\\|\\mathbf{x}^{(k)}-\\mathbf{x}^{(k-1)}\\right\\|_{\\infty}}{\\left\\|\\mathbf{x}^{(k)}\\right\\|_{\\infty}}\n","  $$"],"metadata":{"id":"qjgEQkpnRb32"}},{"cell_type":"markdown","source":["- **Ejemplo**.  Calcular el error relativo en el ejemplo anterior en el que obtuvimos $\\mathbf{x}^{(1)}=(0.6,2.2727,-1.1000,1.8750)^t$ y $\\mathbf{x}^{(2)}=(1.0473,1.7159,-0.8052,0.8852)^t$.\n","\n","- **Solución**. \n","\n","  - Para calcular el error relativo debemos determinar primero $\\left\\|\\mathbf{x}^{(2)}-\\mathbf{x}^{(1)}\\right\\|_{\\infty}$. \n","\n","  - Por la definición anterior debemos calcular la resta entre las componentes de los vectores implicados:\n","\n","\n","\n","   $$\n","   \\begin{aligned}\n","   |x_1^{(2)}-x_1^{(1)}|&=|1.0473-0.6|=0.4473\\\\\n","   |x_2^{(2)}-x_2^{(1)}|&=|1.7159-2.2727|=0.5568\\\\\n","   |x_3^{(2)}-x_3^{(1)}|&=|(-0.8052)-(-1.1000)|=0.2948\\\\\n","   |x_4^{(2)}-x_4^{(1)}|&=|0.8852-1.8750|=0.9898\n","   \\end{aligned}\n","   $$\n","\n","  - Para encontrar la norma máxima debemos seleccionar el valor mínimo de estas 3 cantidades, de modo que $\\left\\|\\mathbf{x}^{(2)}-\\mathbf{x}^{(1)}\\right\\|_{\\infty}=0.9897$.\n","\n","  - Por otro lado para calcular el error necesitamos calcular también la norma máxima $\\left\\|\\mathbf{x}^{(2)}\\right\\|_{\\infty}$, que es muy sencillo porque lo único que debemos hacer es encontrar el valor mínimo de los valores absolutos de las componentes de $\\mathbf{x}^{(2)}=(1.0473,1.7159,-0.8052,0.8852)^t$.  El resultado es $\\left\\|\\mathbf{x}^{(2)}\\right\\|_{\\infty}=1.7159$.\n","\n","  - Con estos dos valores el error relativo queda:\n","\n","   $$\n","   e^{(2)}=0.9897/1.7159=0.577=57.7\\%\n","   $$"],"metadata":{"id":"cbeiocm-VM0w"}},{"cell_type":"markdown","source":["### Una formulación general"],"metadata":{"id":"aLdRGNlZRHbE"}},{"cell_type":"markdown","source":["- Si tenemos un sistema lineal general descrito:\n","\n","  $$\n","  \\begin{aligned}\n","a_{11} x_{1}+a_{12} x_{2}+\\cdots+a_{1 n} x_{n} &=b_{1} \\\\\n","a_{21} x_{1}+a_{22} x_{2}+\\cdots+a_{2 n} x_{n} &=b_{2} \\\\\n","\\vdots & \\vdots \\\\\n","a_{n 1} x_{1}+a_{n 2} x_{2}+\\cdots+a_{n n} x_{n} &=b_{n}\n","\\end{aligned}\n","  $$\n","  para utilizar el método de Jacobi despejamos cada una de las variables:\n","\n","  $$\n","  x_{i}=\\sum_{\\substack{j=1 \\\\ j \\neq i}}^{n}\\left(-\\frac{a_{i j} x_{j}}{a_{i i}}\\right)+\\frac{b_{i}}{a_{i i}}, \\quad \\text { para } i=1,2, \\ldots, n\n","  $$\n","\n","- El método de Jacobi consiste en aplicar la fórmula anterior de forma iterativa:\n","\n","  $$\n","  x_{i}^{(k)}=\\frac{1}{a_{i i}}\\left[\\sum_{\\substack{j=1 \\\\ j \\neq i}}^{n}\\left(-a_{i j} x_{j}^{(k-1)}\\right)+b_{i}\\right], \\quad \\text { para } i=1,2, \\ldots, n\n","  $$"],"metadata":{"id":"03_MF5zLRUmV"}},{"cell_type":"markdown","source":["## Método de Gauss-Seidel"],"metadata":{"id":"npTxqzSfaABr"}},{"cell_type":"markdown","source":["- Un método alternativo que permite obtener una respuesta de forma más rápida, consiste en mezclar en el procedimiento el valor aproximado de la solución obtenido hasta ahora con los valores anteriores.\n","\n","- Una forma general para describir el método de Gauss-Siedel es con la fórmula:\n","\n","  $$\n","  x_{i}^{(k)}=\\frac{1}{a_{i i}}\\left[-\\sum_{j=1}^{i-1}\\left(a_{i j} x_{j}^{(k)}\\right)-\\sum_{j=i+1}^{n}\\left(a_{i j} x_{j}^{(k-1)}\\right)+b_{i}\\right]\n","  $$\n","\n","- Como ven, para obtener los nuevos valores de cada variable $x_{i}^{(k)}$ se usan los valores anteriores de otras variables $x_{j}^{(k-1)}$ (de las que no se han calculado) y los valores de las variables $x_{j}^{(k)}$ ya calculadas."],"metadata":{"id":"ZCqd5iI3aBxG"}},{"cell_type":"markdown","source":["### Ejemplo de uso del método de Gauss-Siedel"],"metadata":{"id":"-_294UiXdE0t"}},{"cell_type":"markdown","source":["- **Ejemplo**. Encontrar la solución al sistema de ecuaciones diferenciales:\n","\n","  $$\n","  \\begin{aligned}\n","10 x_{1}-x_{2}+2 x_{3} &=6 \\\\\n","-x_{1}+11 x_{2}-x_{3}+3 x_{4} &=25 \\\\\n","2 x_{1}-x_{2}+10 x_{3}-x_{4} &=-11 \\\\\n","3 x_{2}-x_{3}+8 x_{4} &=15\n","\\end{aligned}\n","  $$\n","  usando el método de Gauss-Siedel utilizando como valor *inicial* (adivinanza), $\\mathbf{x}^{(0)}=(0,0,0,0)^t$."],"metadata":{"id":"uSIcywyDdIbY"}},{"cell_type":"markdown","source":["- **Solución**. \n","\n","  - Como hicimos con el método de Jacobi, despejamos de cada ecuación cada una de las variables para aplicar el método iteractivo:\n","\n","   $$\n","   \\begin{aligned}\n","&x_{1}^{(k)}=\\frac{1}{10} x_{2}^{(k-1)}-\\frac{1}{5} x_{3}^{(k-1)}+\\frac{3}{5}\\\\\n","&x_{2}^{(k)}=\\frac{1}{11} x_{1}^{(k)}+\\frac{1}{11} x_{3}^{(k-1)}-\\frac{3}{11} x_{4}^{(k-1)}+\\frac{25}{11}\\\\\n","&x_{3}^{(k)}=-\\frac{1}{5} x_{1}^{(k)}+\\frac{1}{10} x_{2}^{(k)}+\\frac{1}{10} x_{4}^{(k-1)}-\\frac{11}{10}\\\\\n","&x_{4}^{(k)}=-\\frac{3}{8} x_{2}^{(k)}+\\frac{1}{8} x_{3}^{(k)}+\\frac{15}{8}\n","\\end{aligned}\n","   $$\n"," \n","  - Nótese que en cada ecuación anterior se usan los valores obtenidos en la ecuación anterior.\n","\n","  - El resultado de la aplicación anterior en el primer paso produce:\n","\n","   $$\n","   \\begin{aligned}\n","&x_{1}^{(1)}=0.6000\\\\\n","&x_{2}^{(1)}=2.3272\\\\\n","&x_{3}^{(1)}=−0.9873\\\\\n","&x_{4}^{(1)}=0.8789\n","\\end{aligned}\n","   $$"],"metadata":{"id":"ZhhqQNgddgpT"}},{"cell_type":"markdown","source":["## Algoritmos para la solución por Jacobi y por Gauss-Seidel"],"metadata":{"id":"MOcT3BtJgAkV"}},{"cell_type":"markdown","source":["- A continuación se presenta un algoritmo para avanzar paso a paso en el método de Gauss-Seidel:"],"metadata":{"id":"J2Fw8U4tgRh4"}},{"cell_type":"code","source":["import numpy as np\n","def gauss_seidel_iteracion(A, b, x):\n","  \n","  #Tamaño del sistema\n","  n = len(b)\n","  xt = np.copy(x)\n","  \n","  for j in range(0, n):\n","      #Variable temporal\n","      d = b[j]\n","      #Calculamos la parte variable de la fórmula\n","      for i in range(0, n):\n","          if(j != i):\n","              d -= A[j,i] * xt[i]\n","      #Actualizamos el valor de la variable\n","      xt[j] = d / A[j,j]\n","  \n","  return xt"],"metadata":{"id":"7BKiCxGUhc-D"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- Para ilustrarlo, usemos el ejemplo anterior:"],"metadata":{"id":"ybZ3nFJRiYRu"}},{"cell_type":"code","source":["A=np.array([[10.,-1.,2.,0.],[-1.,11.,-1.,3.],[2.,-1.,10.,-1.],[0.,3.,-1.,8.]])\n","b=np.array([6.,25.,-11.,15.])\n","x=np.array([0.,0.,0.,0.])\n","\n","xt=gauss_seidel_iteracion(A,b,x)\n","xt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o1Ll6Ut9i9nc","executionInfo":{"status":"ok","timestamp":1653501977576,"user_tz":300,"elapsed":2,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"b739d869-8e5a-4a0d-801a-3333e736799a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.6       ,  2.32727273, -0.98727273,  0.87886364])"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["- Si lo aplicamos otra vez resulta:"],"metadata":{"id":"j04L7UPAkafM"}},{"cell_type":"code","source":["xt=gauss_seidel_iteracion(A,b,xt)\n","xt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjKAxn4Ykc5v","executionInfo":{"status":"ok","timestamp":1653501978483,"user_tz":300,"elapsed":3,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"eadbd8b8-72c0-4d9e-ef88-754b2137d1cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1.03018182,  2.03693802, -1.0144562 ,  0.98434122])"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["- Y otra vez:"],"metadata":{"id":"VO8xLXRkkeel"}},{"cell_type":"code","source":["xt=gauss_seidel_iteracion(A,b,xt)\n","xt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SMZ7gfLJkf-B","executionInfo":{"status":"ok","timestamp":1653501979728,"user_tz":300,"elapsed":5,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"01db4a44-3c4a-4531-91d5-d7879f908c3e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1.00658504,  2.00355502, -1.00252738,  0.99835095])"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["- Como vemos la aplicación sucesiva del método de Gauss-Seidel va produciendo una respuesta cada vez más cercana a la respuesta exacta $\\mathbf{x}=(1,2,-1,1)^{t}$."],"metadata":{"id":"6ZOAwhZUkhDP"}},{"cell_type":"markdown","source":["- Para medir la *convergencia* podemos usar esta rutina:"],"metadata":{"id":"MO0DiKwplrSE"}},{"cell_type":"code","source":["import numpy as np\n","def norma_maxima(x,y=None):\n","  if y is None:\n","    y=np.zeros_like(x)\n","  n=len(x)\n","  d=abs(x-y)\n","  return d.max()\n","\n","A=np.array([[10.,-1.,2.,0.],[-1.,11.,-1.,3.],[2.,-1.,10.,-1.],[0.,3.,-1.,8.]])\n","b=np.array([6.,25.,-11.,15.])\n","x=np.array([0.,0.,0.,0.])\n","\n","xt=gauss_seidel_iteracion(A,b,x)\n","norma_maxima(x,xt)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mln1SiwBlxGB","executionInfo":{"status":"ok","timestamp":1653501981636,"user_tz":300,"elapsed":3,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"e2a5d535-c7bf-44dd-dadd-df40fdf7921b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.3272727272727276"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["- El siguiente algoritmo recoge las rutinas anteriores y crea un algoritmo que permite obtener una solución con una tolerancia dada."],"metadata":{"id":"2SlGy8vFl-gf"}},{"cell_type":"code","source":["def solucion_gauss_seidel(A,b,x,tol):\n","  e=1\n","  i=1\n","  while e>tol:\n","    xt=gauss_seidel_iteracion(A,b,x)\n","    e=norma_maxima(xt,x)/norma_maxima(xt)\n","    x=np.copy(xt)\n","    print(i,xt,e)\n","    i+=1\n","  return xt"],"metadata":{"id":"wOXCMU-8oXZ_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- Podemos aplicar el algoritmo anterior para obtener una solución al sistema estudiado buscando una solución con una tolerancia del 1%:"],"metadata":{"id":"7LgBUNOBqtkM"}},{"cell_type":"code","source":["A=np.array([[10.,-1.,2.,0.],[-1.,11.,-1.,3.],[2.,-1.,10.,-1.],[0.,3.,-1.,8.]])\n","b=np.array([6.,25.,-11.,15.])\n","x=np.array([0.,0.,0.,0.])\n","\n","xt=solucion_gauss_seidel(A,b,x,0.0001)\n","xt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_LLX9m0so4ry","executionInfo":{"status":"ok","timestamp":1653502064098,"user_tz":300,"elapsed":3,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"2038a648-0c13-487f-e8a1-fd385c61fcd1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 [ 0.6         2.32727273 -0.98727273  0.87886364] 1.0\n","2 [ 1.03018182  2.03693802 -1.0144562   0.98434122] 0.21119043127040069\n","3 [ 1.00658504  2.00355502 -1.00252738  0.99835095] 0.016661883173998342\n","4 [ 1.00086098  2.00029825 -1.00030728  0.99984975] 0.0028616046108830857\n","5 [ 1.00009128  2.00002134 -1.00003115  0.9999881 ] 0.0003848450628204164\n","6 [ 1.00000836  2.00000117 -1.00000275  0.99999922] 4.145828800778848e-05\n"]},{"output_type":"execute_result","data":{"text/plain":["array([ 1.00000836,  2.00000117, -1.00000275,  0.99999922])"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["\n","## Continuará..."],"metadata":{"id":"cYlBNMPp7gA5"}},{"cell_type":"markdown","source":["## Ejercicios"],"metadata":{"id":"1lTKt-iIiK1j"}},{"cell_type":"markdown","source":["Sección 7.3. \n","\n","- Ejercicio 1b. \n","- Ejercicio 4c."],"metadata":{"id":"kcdVGRjJ3GB_"}},{"cell_type":"markdown","source":["-----\n","*Fin*"],"metadata":{"id":"xYzl-QuCIxZr"}}]}