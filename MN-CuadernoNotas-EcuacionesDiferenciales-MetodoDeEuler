{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MN-CuadernoNotas-EcuacionesDiferenciales-MetodoDeEuler","provenance":[{"file_id":"1IIL33xjyCO5TLdJ--g9vNHGIer8289W5","timestamp":1645100754048},{"file_id":"1Y9kcTeG9fDfYNpUQGhhRdgUfpfaMx-bv","timestamp":1645007439743},{"file_id":"12hxvrDGbdkdVo1O_mxG_-cQv443s5DlC","timestamp":1644849495161},{"file_id":"1XkDhakXuHdvJx3S3g4do2xOz8bHGzMre","timestamp":1644380017289},{"file_id":"1fk9zU9RRsjlZDg2iPfz80JUZtPfqyaU0","timestamp":1644178176081}],"collapsed_sections":["s5aTHW9f8G5i","qd0V3lNr-cEB","F_jCUp_iWGWc","xUobXPliYTWl","o-FoC0zrTB4z","LZ83wJ3pq9Am","9Mjz4qFQrDtd","re-CUtnTr8e4","bYuOzMkDUUOy","PCnl7n9WwYrJ","68g3gDOCyA4w","H11e5WJOv-Ob","cYlBNMPp7gA5","1lTKt-iIiK1j"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Cuaderno de Notas de Métodos Numéricos\n","## Ecuaciones diferenciales: método de Euler\n","### Prof. Jorge I. Zuluaga\n"],"metadata":{"id":"ACr_iF4176ms"}},{"cell_type":"markdown","source":["#### Ejecutarme siempre"],"metadata":{"id":"s5aTHW9f8G5i"}},{"cell_type":"markdown","source":["A continuación descargamos en el espacio virtual de este cuaderno todos los archivos necesarios para que las notas del curso funcionen bien:"],"metadata":{"id":"oEqSBbXl-gP3"}},{"cell_type":"code","source":["!git clone https://github.com/JorgeZuluaga/NotasMetodosNumericos\n","!ln -s NotasMetodosNumericos mn\n","!make -C mn pull"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y2EhfbwH8Ji0","executionInfo":{"status":"ok","timestamp":1646055832955,"user_tz":300,"elapsed":2553,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKsGLaaxLlXgj2yGrtJEW9mVZpbk2HVUqvhfojWdFXTrIyyrrDd-Ac9UeSaKzIQw1lm2aHJLXbKGuiGVAAXaJuBw9e3vcVHV05LUQ6mSbfhfSul0zcSQxJCfgephLqdnrr9jmxc16bOoJ1EQvdMocOWa5Mq19xZbxqzujFkruuWu2SBETqiHwpEDozmflrMznFIyfEjCJ1s3qENBT_l81xHJzK5-evtRIDJyv7S3Fh8PSHCvLidVNFRpXz5wshkb90ZD9_zSJwWWv3LDIn3k9dVV0o1R25NroGVy6VowM-9zd6wYhw5Evuj69DGentxrz-WR-StQ7LrJsN-GBNBDfkpJPztacjZkzrp3_3I3IDYN2nMW29b-pdQ4UZ_GThr2ABQpBLHrl1hIq5COcM9m5aNdzkoLEE8IuxXtZtS_2tdHMSaclrMXg7MycVGgC8rRE9eTyaH1Kw77O6H4s9LsBrNy5wS-2sHwSy_yYr6eMJ2E4NAgLEHm0FerNgPh7bOkiwByOU_FeATBjdGmjdMJ88UTFgCKsgJzvz05QmWYuugDJmXl8OIrQq4WFDkY0v3SRQqCZLG65Oqantfkk4SsZLirYOpRAhAGh14lJkdhG1b6Ie7qZpv2N0GBBPgEqXHqBJ9O98HasMz5ay2YX51GCVIbxghb-8gQYwnkOOwrYAThP3T2jKDV473kq42XEvbKOiF2p7gzYpHOYokzNRp9pgKLvDs1_CcTEKJ_1yyAC5ZR_ol-F28Vwi1i9A6Xk9MMsupak=s64","userId":"14268130563590845195"}},"outputId":"e65deb12-ef37-4e61-f1b0-f4fc8aae4a39"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'NotasMetodosNumericos'...\n","remote: Enumerating objects: 108, done.\u001b[K\n","remote: Counting objects: 100% (108/108), done.\u001b[K\n","remote: Compressing objects: 100% (85/85), done.\u001b[K\n","remote: Total 108 (delta 46), reused 82 (delta 20), pack-reused 0\u001b[K\n","Receiving objects: 100% (108/108), 8.53 MiB | 19.32 MiB/s, done.\n","Resolving deltas: 100% (46/46), done.\n","make: Entering directory '/content/NotasMetodosNumericos'\n","git reset --hard HEAD\n","HEAD is now at 876de31 Commit\n","git pull origin master\n","From https://github.com/JorgeZuluaga/NotasMetodosNumericos\n"," * branch            master     -> FETCH_HEAD\n","Already up to date.\n","make: Leaving directory '/content/NotasMetodosNumericos'\n"]}]},{"cell_type":"markdown","source":["## Un vistazo de la clase"],"metadata":{"id":"qd0V3lNr-cEB"}},{"cell_type":"markdown","source":["  Qué veremos en esta clase:\n","\n","  - Motivació y definiciones básicas\n","  - Método de Euler.\n","  - Sistema de ecuaciones diferenciales.\n","\n","  Para leer en el libro: sección 5.1 \"Teoría elemental de problemas de valor inicial\", sección 5.9 \"Ecuaciones de orden superior y sistemas de ecuaciones \n","diferenciales\" hasta la ecuación 5.46."],"metadata":{"id":"GMuDTK_T-fAm"}},{"cell_type":"markdown","source":["## Motivación y definiciones básicas"],"metadata":{"id":"F_jCUp_iWGWc"}},{"cell_type":"markdown","source":["- El crecimiento poblacional es una de las grandes preocupaciones del presente en el planeta.  ¿Cómo se describe matemáticamente el problema?.\n","\n","- Supongamos que en un momento $t_0$ hay $N(t_0)=N_0$ habitantes en el planeta.  Supongamos que cada año el número de habitantes crece en $k=1$%.  ¿Cuántos habitantes habrá en 20 años?.  La pregunta parece sencilla pero la respuesta no lo es tanto.\n","\n","- Es posible escribir este problema usando la siguiente ecuación matemática:\n","\n","  $$\n","  \\frac{dN}{dt}=kN\\mathrm{,\\;con\\;} N(0) = N_0\n","  $$\n","\n","  a esta se la llama una ecuación diferencial ordinaria de primer orden.  Al problema de resolver esta ecuación diferencial se lo conoce como **problema de valor inicial**."],"metadata":{"id":"fmc8u4rBXhH_"}},{"cell_type":"markdown","source":["### Definiciones básicas"],"metadata":{"id":"xUobXPliYTWl"}},{"cell_type":"markdown","source":["- En general llamamos un problema de valor inicial a un problema en el que una función desconocida $y(t)$ satisface una ecuación diferencial de la forma:\n","\n","  $$\n","  \\frac{d y}{d t}=f(t, y), \\quad a \\leq t \\leq b, \\quad y(a)=\\alpha\n","  $$\n","\n","  al valor de $\\alpha$ lo llamamos la condición inicial.\n","\n","- En el problema de crecimiento poblacional anterior identificamos:\n","\n","  - Función $y(t)$: número de personas, $N(t)$.\n","  - Intervalo $[a,b]$: intervalo de tiempo fecha actual y fecha futura $[0,T]$. \n","  - Función de la ecuación diferencial $f(t,y)$: la función en este caso es $kN$."],"metadata":{"id":"j5B2xf7CYV59"}},{"cell_type":"markdown","source":["## Método de Euler"],"metadata":{"id":"o-FoC0zrTB4z"}},{"cell_type":"markdown","source":["### Teoría básica"],"metadata":{"id":"LZ83wJ3pq9Am"}},{"cell_type":"markdown","source":["- Desde los tiempos de Newton (cuando se inventó el cálculo) se han ideado distintos métodos para resolver el problema de valor inicial.\n","\n","- El más conocido y fácil de entender se conoce como el *método de Euler*.  \n","\n","- El método parte de pensar en una expansión en Taylor de la función $y(t)$ que como sabemos permite conocer el valor futuro (en un tiempo $t_{i+1}$) de una función, a partir de su valor presente (en un tiempo $t_i$) si se sabe además sus derivadas:\n","\n","  $$\n","  y\\left(t_{i+1}\\right)=y\\left(t_{i}\\right)+\\left(t_{i+1}-t_{i}\\right) y^{\\prime}\\left(t_{i}\\right)+\\frac{\\left(t_{i+1}-t_{i}\\right)^{2}}{2} y^{\\prime \\prime}\\left(\\xi_{i}\\right)\n","  $$\n","\n","- Si la función $y(t)$ se cumple la ecuación diferencial: \n","\n","  $$\n","  \\frac{d y}{d t}=f(t, y)\n","  $$\n","\n","  que se puede escribir como:\n","\n","  $$\n","  y'(t)=f(t, y)\n","  $$\n","\n","  entonces la expansión en series se puede escribir como:\n","\n","  $$\n","  y\\left(t_{i+1}\\right)=y\\left(t_{i}\\right)+h f\\left(t_{i}, y\\left(t_{i}\\right)\\right)+\\frac{h^{2}}{2} y^{\\prime \\prime}\\left(\\xi_{i}\\right)\n","  $$\n","\n","  donde $h=t_{i+1}-t_i$. "],"metadata":{"id":"JLAFP091TEh3"}},{"cell_type":"markdown","source":["### Método de Euler"],"metadata":{"id":"9Mjz4qFQrDtd"}},{"cell_type":"markdown","source":["- El método de Euler permite encontrar el valor aproximado de la función $y(t)$ en $N$ valores de tiempo $t_0, t_1, t_2,\\ldots,t_N$ sabiendo el valor inicial $y(t_0)$.\n","\n","- Llamamos al valor inicial $w_0=y(t_0)=\\alpha$ (que es perfectamente conocido) y a los valores posteriores $w_i=y(t_i)$ que son los que estamos buscando y son aproximados.\n","\n","- El método de Euler se puede presentar como un método iterativo que utiliza la siguiente fórmula de recurrencia:\n","\n","  $$\n","  \\begin{aligned}\n","w_{0} &=\\alpha \\\\\n","w_{i+1} &=w_{i}+h f\\left(t_{i}, w_{i}\\right), \\quad \\text { para cada } i=0,1, \\ldots, N-1\n","\\end{aligned}\n","  $$\n","\n","- A esta fórmula se la llama la **ecuación de diferencia**."],"metadata":{"id":"R66KV_2brF7Q"}},{"cell_type":"markdown","source":["### Algoritmo del método de Euler"],"metadata":{"id":"re-CUtnTr8e4"}},{"cell_type":"markdown","source":["- A continuación se muestra el algoritmo del método de Euler como aparece en el libro de Burden:\n","\n","<center>\n","  <img src=\"https://raw.githubusercontent.com/JorgeZuluaga/NotasMetodosNumericos/master/figuras/metodo-euler.png\" width=400>\n","  </center>\n","\n","- Una versión en Python del método de Euler se muestra a continuación\n"],"metadata":{"id":"Vs2DV4hIr-ta"}},{"cell_type":"code","source":["import numpy as np\n","def metodo_euler_burden(f,a,b,alfa,N):\n","  #Paso 1\n","  h=(b-a)/N\n","  ts=[a]\n","  ws=[alfa]\n","  #Paso 2\n","  for i in range(1,N+1):\n","    ws+=[ws[i-1]+h*f(ts[i-1],ws[i-1])]\n","    ts+=[a+i*h]\n","  return np.array(ts),np.array(ws)"],"metadata":{"id":"rPYDsTlgsfIs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Ejemplo del método de Euler"],"metadata":{"id":"bYuOzMkDUUOy"}},{"cell_type":"markdown","source":["- **Ejemplo**:  Use el método de Euler para aproximar la solución de\n","$$\n","y^{\\prime}=y-t^{2}+1, \\quad 0 \\leq t \\leq 2, \\quad y(0)=0.5\n","$$\n","en $t=2$. Compárelos con el valor exacto que es: $y(t)=(t+1)^{2}-0.5 e^{t}$.\n","\n","- **Solución**: \n","  \n","  - Debemos escoger para ello el valor de $N$ o el de $h$.  Escojamos por ejemplo $N=4$.\n","\n","  - Eso implica que $h=(b-a)/N=(2-0)/4=0.5$.\n","\n","  - Para este problema $f(t, y)=y-t^{2}+1$, $w_0=y(0)=0.5$\n","\n","  - Aplicamos el método:\n","  $$\n","  \\begin{aligned}\n","  &y(0.5)\\approx w_{1}=w_{0}+0.5\\left(w_{0}-(0.0)^{2}+1\\right)=0.5+0.5(1.5)=1.25 \\\\\n","  &y(1.0)\\approx w_{2}=w_{1}+0.5\\left(w_{1}-(0.5)^{2}+1\\right)=1.25+0.5(2.0)=2.25 \\\\\n","  &y(1.5)\\approx w_{3}=w_{2}+0.5\\left(w_{2}-(1.0)^{2}+1\\right)=2.25+0.5(2.25)=3.375\n","  \\end{aligned}\n","  $$\n","\n","  - Y finalmente:\n","  $$\n","  y(2) \\approx w_{4}=w_{3}+0.5\\left(w_{3}-(1.5)^{2}+1\\right)=3.375+0.5(2.125)=4.4375\n","  $$\n","\n","- Usando el programa en Python:"],"metadata":{"id":"oRCgnwCAUXB7"}},{"cell_type":"code","source":["f=lambda t,y:y-t**2+1\n","ts,ys=metodo_euler_burden(f,0,2,0.5,4)\n","print(ts,ys)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"muKPL5nkuWN0","executionInfo":{"status":"ok","timestamp":1652727064402,"user_tz":300,"elapsed":339,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"875ece4a-15f0-4ff2-9182-e582c8a55212"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.  0.5 1.  1.5 2. ] [0.5    1.25   2.25   3.375  4.4375]\n"]}]},{"cell_type":"markdown","source":["- Los valores exactos se pueden calcular así:"],"metadata":{"id":"mcGhXktUu3mv"}},{"cell_type":"code","source":["import numpy as np\n","y=lambda t:(t+1)**2-0.5*np.exp(t)\n","\n","yexacs=y(ts)\n","\n","yexacs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a0C7uT7Ku6my","executionInfo":{"status":"ok","timestamp":1652727066539,"user_tz":300,"elapsed":4,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"32d72b2c-5e46-4e4e-e542-88d9dbd99b15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.5       , 1.42563936, 2.64085909, 4.00915546, 5.30547195])"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["- Podemos compararlo gráficamente usando:"],"metadata":{"id":"Nv-n901UvNiZ"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.plot(ts,ys,'ro--',label=\"Aproximado\")\n","plt.plot(ts,yexacs,'ko-',label=\"Exacto\")\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"PPIr7RkSvQVh","executionInfo":{"status":"ok","timestamp":1652727068958,"user_tz":300,"elapsed":432,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"ed36808a-a61c-4b3a-a7ff-39a1173b2821"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f614488d310>"]},"metadata":{},"execution_count":39},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Sistemas de ecuaciones diferenciales"],"metadata":{"id":"PCnl7n9WwYrJ"}},{"cell_type":"markdown","source":["- ¿Qué pasa ahora si yo tengo multiples ecuaciones diferenciales y múltiples funciones y condiciones iniciales?:\n","\n","  $$\n","\\begin{aligned}\n","\\frac{d u_{1}}{d t}=& f_{1}\\left(t, u_{1}, u_{2}, \\ldots, u_{m}\\right) \\\\\n","\\frac{d u_{2}}{d t}=& f_{2}\\left(t, u_{1}, u_{2}, \\ldots, u_{m}\\right) \\\\\n","& \\vdots \\\\\n","\\frac{d u_{m}}{d t}=& f_{m}\\left(t, u_{1}, u_{2}, \\ldots, u_{m}\\right)\n","\\end{aligned}\n","$$\n","\n","  con condiciones iniciales: $u_{1}(a)=\\alpha_{1}, u_{2}(a)=\\alpha_{2}, \\ldots, u_{m}(a)=\\alpha_{m}$.\n","\n","- La solución a este tipo de problemas se realiza utilizando un método similar al que usamos con el problema de una sola ecuación diferencial, solo que ahora se aplica a varias ecuaciones:\n","\n","- El método original es:\n","\n"," $$\n","  \\begin{aligned}\n","w_{0} &=\\alpha \\\\\n","w_{j+1} &=w_{j}+h f\\left(t_{j}, w_{j}\\right), \\quad \\text { para cada } j=0,1, \\ldots, N-1\n","\\end{aligned}\n"," $$\n","\n","- Para multiples ecuaciones diferenciales sería:\n","\n"," $$\n","  \\begin{aligned}\n","w_{i,0} &=\\alpha_i \\\\\n","w_{i,j+1} &=w_{i,j}+h f_i\\left(t_{j}, w_{j,1}, w_{j,2}, \\ldots, w_{j,m}\\right), \\quad \\text { para cada } j=0,1, \\ldots, N-1\n","\\end{aligned}\n"," $$\n","\n"," donde la ecuación se aplica para cada variable $i=1,2,\\ldots,m$."],"metadata":{"id":"hAkiPTv_wazL"}},{"cell_type":"markdown","source":["### Algorimo para solución de sistemas de ecuaciones diferenciales"],"metadata":{"id":"68g3gDOCyA4w"}},{"cell_type":"markdown","source":["- A continuación presentamos una generalización del algoritmo de Burden para una ecuación a un sistema de ecuaciones:"],"metadata":{"id":"PEt230_4sdWw"}},{"cell_type":"code","source":["import numpy as np\n","def metodo_euler_sistema(fs,a,b,alfas,N):\n","  #Numero de funciones\n","  m=len(fs)\n","  \n","  #Iniciamos las listas\n","  ts=np.zeros(N+1)\n","  ws=np.zeros((m,N+1))\n","\n","  #Paso\n","  h=(b-a)/N\n","\n","  #Condiciones iniciales\n","  ts[0]=a\n","  ws[:,0]=np.array(alfas)\n","\n","  #Fórmula de recurrencia\n","  for j in range(1,N+1):\n","    for i in range(m):\n","      k1=h*fs[i](ts[j-1],ws[:,j-1])\n","      ws[i,j]=ws[i,j-1]+k1\n","    ts[j]=a+j*h\n","  return ts,ws"],"metadata":{"id":"bGX_K0z2sm0i","executionInfo":{"status":"ok","timestamp":1652887334357,"user_tz":300,"elapsed":244,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["### Ejemplo de problema de sistemas de ecuaciones diferenciales"],"metadata":{"id":"H11e5WJOv-Ob"}},{"cell_type":"markdown","source":["- **Ejemplo**.  Resolver el sistema de ecuaciones diferenciales:\n","  $$\n","  \\begin{aligned}\n","&I_{1}^{\\prime}=-4 I_{1}+3 I_{2}+6, \\quad I_{1}(0)=0 \\\\\n","&I_{2}^{\\prime}=-2.4 I_{1}+1.6 I_{2}+3.6, \\quad I_{2}(0)=0\n","\\end{aligned}\n","  $$\n","  para $0\\leq t\\leq 0.5$ con $h=0.1$.  Comparar con la solución exacta:\n","\n","  $$\n","  \\begin{aligned}\n","&I_{1}(t)=-3.375 e^{-2 t}+1.875 e^{-0.4 t}+1.5 \\\\\n","&I_{2}(t)=-2.25 e^{-2 t}+2.25 e^{-0.4 t}\n","\\end{aligned}\n","  $$\n","\n","- **Solución**.  \n","\n","  - Vamos a resolver el problema usando primero el algoritmo introducido arriba:"],"metadata":{"id":"xzBLPizfwDQW"}},{"cell_type":"code","source":["fs=[\n","    lambda t,Is:-4*Is[0]+3*Is[1]+6,\n","    lambda t,Is:-2.4*Is[0]+1.6*Is[1]+3.6\n","   ]\n","alfas=[0,0]\n","\n","ts,Is=metodo_euler_sistema(fs,0,1,alfas,5)\n","\n","print(Is)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lCF34n1zwuDW","executionInfo":{"status":"ok","timestamp":1652887377920,"user_tz":300,"elapsed":212,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"56b9cd7b-b800-4b2b-ba0b-fcd9db68ef71"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.         1.2        1.872      2.23104    2.4058368  2.47333786]\n"," [0.         0.72       1.0944     1.266048   1.32028416 1.30797343]]\n"]}]},{"cell_type":"markdown","source":["- **Solución (cont.)**\n","\n","  - Nótese la manera en la que tuvimos que definir el sistema usando una lista de funciones `lambda` y como las variables $I_1$ e $I_2$ deben ser tratadas como elementos de una lista `I[0]`$=I_1$ e `I[1]`$=I_2$.\n","\n","  - También nótese que la solución aproximada obtenida es una matriz, cuyas filas continen los valores de cada función en los valores de cada tiempo.\n","\n","  - Para comparar la solución obtenida con la solución exacta podemos usar este código:\n","\n","\n"],"metadata":{"id":"YM8Vch_hw0WR"}},{"cell_type":"code","source":["I1=lambda t:-3.375*np.exp(-2*t)+1.875*np.exp(-0.4*t)+1.5\n","I2=lambda t:-2.25*np.exp(-2*t)+2.25*np.exp(-0.4*t)\n","\n","import matplotlib.pyplot as plt\n","plt.plot(ts,I1(ts),'ro-')\n","plt.plot(ts,I2(ts),'bo-')\n","\n","plt.plot(ts,Is[0,:],'ro--')\n","plt.plot(ts,Is[1,:],'bo--')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"huFMR1kVxjwa","executionInfo":{"status":"ok","timestamp":1652887553151,"user_tz":300,"elapsed":675,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"28d0bf9b-7f26-42de-f5fe-1c08a763d65c"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f63462f3110>]"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["\n","## Continuará..."],"metadata":{"id":"cYlBNMPp7gA5"}},{"cell_type":"markdown","source":["## Ejercicios"],"metadata":{"id":"1lTKt-iIiK1j"}},{"cell_type":"markdown","source":["- Ejercicio 1d, sección 5.1.\n","- Ejercicio 1a, sección 5.9.\n","- Ejercicio 6, sección 5.9 (aplicación)."],"metadata":{"id":"kcdVGRjJ3GB_"}},{"cell_type":"markdown","source":["-----\n","*Fin*"],"metadata":{"id":"xYzl-QuCIxZr"}}]}