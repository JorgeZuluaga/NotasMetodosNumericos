{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MN-CuadernoNotas-ExtrapolacionRichardson","provenance":[{"file_id":"1IIL33xjyCO5TLdJ--g9vNHGIer8289W5","timestamp":1645100754048},{"file_id":"1Y9kcTeG9fDfYNpUQGhhRdgUfpfaMx-bv","timestamp":1645007439743},{"file_id":"12hxvrDGbdkdVo1O_mxG_-cQv443s5DlC","timestamp":1644849495161},{"file_id":"1XkDhakXuHdvJx3S3g4do2xOz8bHGzMre","timestamp":1644380017289},{"file_id":"1fk9zU9RRsjlZDg2iPfz80JUZtPfqyaU0","timestamp":1644178176081}],"collapsed_sections":["s5aTHW9f8G5i","qd0V3lNr-cEB","F_jCUp_iWGWc","eEiHSEfsbmvs","uURNoEqBY4wH","IqZPgOLelZ33","NQUPFUCyivZp","NHx4BDmOn5WZ","qNE3O8kBq6id","8ll2Pju6uPKp","cYlBNMPp7gA5","1lTKt-iIiK1j"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Cuaderno de Notas de Métodos Numéricos\n","## Extrapolación de Richardson\n","### Prof. Jorge I. Zuluaga\n"],"metadata":{"id":"ACr_iF4176ms"}},{"cell_type":"markdown","source":["#### Ejecutarme siempre"],"metadata":{"id":"s5aTHW9f8G5i"}},{"cell_type":"markdown","source":["A continuación descargamos en el espacio virtual de este cuaderno todos los archivos necesarios para que las notas del curso funcionen bien:"],"metadata":{"id":"oEqSBbXl-gP3"}},{"cell_type":"code","source":["!git clone https://github.com/JorgeZuluaga/NotasMetodosNumericos\n","!ln -s NotasMetodosNumericos mn\n","!make -C mn pull"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y2EhfbwH8Ji0","executionInfo":{"status":"ok","timestamp":1646055832955,"user_tz":300,"elapsed":2553,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgKsGLaaxLlXgj2yGrtJEW9mVZpbk2HVUqvhfojWdFXTrIyyrrDd-Ac9UeSaKzIQw1lm2aHJLXbKGuiGVAAXaJuBw9e3vcVHV05LUQ6mSbfhfSul0zcSQxJCfgephLqdnrr9jmxc16bOoJ1EQvdMocOWa5Mq19xZbxqzujFkruuWu2SBETqiHwpEDozmflrMznFIyfEjCJ1s3qENBT_l81xHJzK5-evtRIDJyv7S3Fh8PSHCvLidVNFRpXz5wshkb90ZD9_zSJwWWv3LDIn3k9dVV0o1R25NroGVy6VowM-9zd6wYhw5Evuj69DGentxrz-WR-StQ7LrJsN-GBNBDfkpJPztacjZkzrp3_3I3IDYN2nMW29b-pdQ4UZ_GThr2ABQpBLHrl1hIq5COcM9m5aNdzkoLEE8IuxXtZtS_2tdHMSaclrMXg7MycVGgC8rRE9eTyaH1Kw77O6H4s9LsBrNy5wS-2sHwSy_yYr6eMJ2E4NAgLEHm0FerNgPh7bOkiwByOU_FeATBjdGmjdMJ88UTFgCKsgJzvz05QmWYuugDJmXl8OIrQq4WFDkY0v3SRQqCZLG65Oqantfkk4SsZLirYOpRAhAGh14lJkdhG1b6Ie7qZpv2N0GBBPgEqXHqBJ9O98HasMz5ay2YX51GCVIbxghb-8gQYwnkOOwrYAThP3T2jKDV473kq42XEvbKOiF2p7gzYpHOYokzNRp9pgKLvDs1_CcTEKJ_1yyAC5ZR_ol-F28Vwi1i9A6Xk9MMsupak=s64","userId":"14268130563590845195"}},"outputId":"e65deb12-ef37-4e61-f1b0-f4fc8aae4a39"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'NotasMetodosNumericos'...\n","remote: Enumerating objects: 108, done.\u001b[K\n","remote: Counting objects: 100% (108/108), done.\u001b[K\n","remote: Compressing objects: 100% (85/85), done.\u001b[K\n","remote: Total 108 (delta 46), reused 82 (delta 20), pack-reused 0\u001b[K\n","Receiving objects: 100% (108/108), 8.53 MiB | 19.32 MiB/s, done.\n","Resolving deltas: 100% (46/46), done.\n","make: Entering directory '/content/NotasMetodosNumericos'\n","git reset --hard HEAD\n","HEAD is now at 876de31 Commit\n","git pull origin master\n","From https://github.com/JorgeZuluaga/NotasMetodosNumericos\n"," * branch            master     -> FETCH_HEAD\n","Already up to date.\n","make: Leaving directory '/content/NotasMetodosNumericos'\n"]}]},{"cell_type":"markdown","source":["## Un vistazo de la clase"],"metadata":{"id":"qd0V3lNr-cEB"}},{"cell_type":"markdown","source":["  Qué veremos en esta clase:\n","\n","  - Resumen de aproximación numérica.\n","  - Comportamiento de la precisión como función de $h$.\n","  - Extrapolación de richardson.\n","\n","  Para leer en el libro: sección 4.2 \"Extrapolación de Richardson\"."],"metadata":{"id":"GMuDTK_T-fAm"}},{"cell_type":"markdown","source":["## Resumen de aproximación numérica de la derivada y sus errores"],"metadata":{"id":"F_jCUp_iWGWc"}},{"cell_type":"markdown","source":["- Hemoso visto fórmulas para calcular, con distintos grados de precisión la primera y segunda derivada numérica:\n","\n","    - Fórmula de **diferencia hacia adelante**:\n"," \n","   $$\n","  f^{\\prime}\\left(x_{0}\\right)\\approx \\frac{f\\left(x_{0}+h\\right)-f\\left(x_{0}\\right)}{h}-\\frac{h}{2} f^{\\prime \\prime}(\\xi)\n","  $$\n","  \n","   Tipo de error $\\cal O(h)$, cota de error: $E_a< Mh/2$.\n","\n","    - Fórmula de **diferencia hacia atrás**:\n","\n","    $$\n","  f^{\\prime}\\left(x_{0}\\right)\\approx \\frac{f\\left(x_{0}\\right)-f\\left(x_{0}-h\\right)}{h}+\\frac{h}{2} f^{\\prime \\prime}(\\xi)\n","  $$\n","  \n","   Tipo de error $\\cal O(h)$, cota de error: $E_a< Mh/2$.\n","\n","    - Fórmula de **diferencia central**:\n","\n","    $$\n","  f^{\\prime}\\left(x_{0}\\right)\\approx \\frac{f\\left(x_{0}+h\\right)-f\\left(x_{0}-h\\right)}{2h}-\\frac{h^2}{6} f^{\\prime \\prime\\prime}(\\xi)\n","  $$\n","  \n","   Tipo de error $\\cal O(h^2)$, cota de error: $E_a< Mh^2/6$.\n","\n","    - Fórmula de la **segunda derivada por punto medio**:\n","\n","     $$ \n","    f^{\\prime \\prime}\\left(x_{0}\\right)=\\frac{1}{h^{2}}\\left[f\\left(x_{0}+h\\right)-2 f\\left(x_{0}\\right)+f\\left(x_{0}-h\\right)\\right]-\\frac{h^{2}}{12} f^{(4)}(\\xi)\n","  $$\n","  \n","     Tipo de error $\\cal O(h^2)$, cota de error: $E_a< Mh^2/12$."],"metadata":{"id":"fmc8u4rBXhH_"}},{"cell_type":"markdown","source":["- Hay otras fórmulas que no hemos visto:\n","\n","  - Fórmula del **extremo de tres puntos**:\n","\n","   $$\n","f^{\\prime}\\left(x_{0}\\right)=\\frac{1}{2 h}\\left[-3 f\\left(x_{0}\\right)+4 f\\left(x_{0}+h\\right)-f\\left(x_{0}+2 h\\right)\\right]+\\frac{h^{2}}{3} f^{(3)}\\left(\\xi_{0}\\right)\n","$$\n","  Tipo de error $\\cal O(h^2)$.\n","\n","  - Fórmula del **punto medio de cinco puntos**:\n","\n","   $$\n","f^{\\prime}\\left(x_{0}\\right)=\\frac{1}{12 h}\\left[f\\left(x_{0}-2 h\\right)-8 f\\left(x_{0}-h\\right)+8 f\\left(x_{0}+h\\right)-f\\left(x_{0}+2 h\\right)\\right]+\\frac{h^{4}}{30} f^{(5)}(\\xi)\n","$$\n","  Tipo de error $\\cal O(h^4)$.\n","\n","  - Fórmula del **extremo de 5 puntos para la segunda derivada**:\n","\n","   $$\n","f^{\\prime \\prime}\\left(x_{0}\\right)=\\frac{1}{12h^2}\\left[-f\\left(x_0+2h\\right)+16 f\\left(x_0+h\\right)-30 f\\left(x_0\\right)+16 f\\left(x_0-h\\right)-f\\left(x_0-2h\\right)\\right]\n","$$\n","  Tipo de error $\\cal O(h^4)$.\n","\n","  - Fórmula del **extremo de 4 puntos de la tercera derivada**:\n","\n","   $$\n","f^{\\prime \\prime \\prime}\\left(x_{0}\\right)=\\frac{1}{2h^3}\\left[f\\left(x_0+2h\\right)-2 f\\left(x_0+h\\right)+2 f\\left(x_0-h\\right)-f\\left(x_0-2h\\right)\\right]\n","$$\n","  Tipo de error $\\cal O(h^2)$."],"metadata":{"id":"3Vu11UvDXXqS"}},{"cell_type":"markdown","source":["## Comportamiento de la precisión como función de $h$"],"metadata":{"id":"eEiHSEfsbmvs"}},{"cell_type":"markdown","source":["- Podemos poner a prueba el comportamiento del error de las distintas fórmulas para el cálculo de la derivada de una función apoyándonos de las rutinas que habíamos introducido en la última lección:"],"metadata":{"id":"UdRQEz7z0NOK"}},{"cell_type":"code","source":["import sympy as sp\n","import numpy as np\n","def primera_derivada(f,x0,h,tipo=\"adelante\"):\n","\n","  x=sp.symbols(\"x\")\n","  fun=sp.lambdify(x,f)\n","\n","  #Calcula el valor real\n","  fp=sp.diff(f,x)\n","  fpfun=sp.lambdify(x,fp)\n","  fpreal=fpfun(x0)\n","\n","  if tipo==\"adelante\":\n","    #Calcular el valor\n","    fp=(fun(x0+h)-fun(x0))/h\n","    #Estima el error\n","    fpp=sp.diff(f,x,2)\n","    fppfun=sp.lambdify(x,fpp)\n","    xs=np.linspace(x0,x0+h,10)\n","    M=abs(fppfun(xs)).max()\n","    Emax=M*h/2\n","  elif tipo==\"atras\":\n","    #Calcular el valor\n","    fp=(fun(x0)-fun(x0-h))/h\n","    #Estima el error\n","    fpp=sp.diff(f,x,2)\n","    fppfun=sp.lambdify(x,fpp)\n","    xs=np.linspace(x0-h,x0,10)\n","    M=abs(fppfun(xs)).max()\n","    Emax=M*h/2\n","  else:\n","    #Calcular el valor\n","    fp=(fun(x0+h)-fun(x0-h))/(2*h)\n","    #Estima el error\n","    fppp=sp.diff(f,x,3)\n","    fpppfun=sp.lambdify(x,fppp)\n","    xs=np.linspace(x0-h,x0+h,10)\n","    M=abs(fpppfun(xs)).max()\n","    Emax=M*h**2/6\n","  \n","  Ea=abs(fp-fpreal)\n","  return fp,Emax,Ea\n","\n","def segunda_derivada(f,x0,h):\n","\n","  x=sp.symbols(\"x\")\n","  fun=sp.lambdify(x,f)\n","\n","  #Calcula el valor real\n","  fpp=sp.diff(f,x,2)\n","  fppfun=sp.lambdify(x,fpp)\n","  fppreal=fppfun(x0)\n","\n","  #Valor aproximado\n","  fpp=(fun(x0+h)-2*fun(x0)+fun(x0-h))/h**2\n","\n","  #Estima el error\n","  f4=sp.diff(f,x,4)\n","  f4fun=sp.lambdify(x,f4)\n","  xs=np.linspace(x0-h,x0+h,10)\n","  M=abs(f4fun(xs)).max()\n","  Emax=M*h**2/12\n","  \n","  Ea=abs(fpp-fppreal)\n","  return fpp,Emax,Ea"],"metadata":{"id":"AUt55ld9arPV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- Vemos por ejemplo que pasa cuando cambiamos el valor de h:"],"metadata":{"id":"d8Wvfr4gauVw"}},{"cell_type":"code","source":["x=sp.symbols(\"x\")\n","f=sp.log(x)\n","hs=[0.1,0.01,0.001,0.0001]\n","\n","errores_adelante=[]\n","errores_atras=[]\n","errores_central=[]\n","for h in hs:\n","  fp,Emax,Ea=primera_derivada(f,1.8,h,tipo=\"adelante\")\n","  errores_adelante+=[Ea]\n","  fp,Emax,Ea=primera_derivada(f,1.8,h,tipo=\"atras\")\n","  errores_atras+=[Ea]\n","  fp,Emax,Ea=primera_derivada(f,1.8,h,tipo=\"central\")\n","  errores_central+=[Ea]"],"metadata":{"id":"LuZEtdXMay2Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["errores_adelante"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WdwUwcTpAqQg","executionInfo":{"status":"ok","timestamp":1650475578261,"user_tz":300,"elapsed":241,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"0f1d9106-f291-4222-ab41-15f76ab40d23"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.014883342852798132,\n"," 0.0015375179940233519,\n"," 0.00015426385560268763,\n"," 1.543152796856795e-05]"]},"metadata":{},"execution_count":246}]},{"cell_type":"code","source":["errores_central"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0WgJHJS-_1B5","executionInfo":{"status":"ok","timestamp":1650475760801,"user_tz":300,"elapsed":260,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"9222dca3-5e46-425a-c16e-fa7a482f3f8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.0005726199955665701,\n"," 5.71569797958027e-06,\n"," 5.715586692822683e-08,\n"," 5.715186102150938e-10]"]},"metadata":{},"execution_count":247}]},{"cell_type":"markdown","source":["- Hagamos un gráfico:"],"metadata":{"id":"EPHK1cvUbMc0"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.loglog(hs,errores_adelante,'ko--',label=\"Derivada diferencia hacia adelante\")\n","plt.loglog(hs,errores_atras,'bs--',label=\"Derivada diferencia hacia atrás\")\n","plt.loglog(hs,errores_central,'ro--',label=\"Derivada diferencia central\")\n","plt.title(f\"Error en la defivada de la función {f}\")\n","plt.xlabel(\"$h$\")\n","plt.ylabel(\"$E_a$\")\n","plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"jtLMcIYrbN5m","executionInfo":{"status":"ok","timestamp":1650475765247,"user_tz":300,"elapsed":2880,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"51dcf704-1f41-4b35-d9ed-79ae163af769"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7fb59b982f10>"]},"metadata":{},"execution_count":248},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["- Varias observaciones pueden hacerse con relación a esta gráfica:\n","\n","  - Definitivamente la fórmula con diferencia central es la mejor.  Sin embargo, puede verse que la fórmula de diferencia hacia adelante o hacia atrás producen los mismos resultados que la fórmula de diferencia hacia atrás siempre que se usen valores muy pequeños de $h$.  \n","  \n","  - Por ejemplo, el error de la fórmula con diferencia central para $h=0.1$ es el mismo que el de diferencia hacia adelante para $h=0.001$.\n","\n","  - En todos los casos el valor de $h$ disminuye, el valor del error, en un diagrama log-log, sigue un comportamiento del tipo de una línea recta:\n","\n","    $$ \n","    \\log E_a = m \\log h + b\n","    $$\n","    \n","  - Esto significa que la fórmula para el error en estos casos es del tipo:\n","\n","    $$\n","    E_a = E_0 h^m\n","    $$\n","\n","  - Que es justo lo que habíamos encontrado antes.  Por ejemplo en el caso de la fórmula de diferencia central habíamos encontrado que:\n","\n","    $$\n","    E_a=\\frac{f^{\\prime \\prime\\prime}(\\xi)}{6} h^2\n","    $$\n","    es decir en este caso el exponente es $m=2$, que es justamente lo que vemos en el gráfico.\n"],"metadata":{"id":"5_AwztQmcBfl"}},{"cell_type":"markdown","source":["## Extrapolación de Richardson"],"metadata":{"id":"uURNoEqBY4wH"}},{"cell_type":"markdown","source":["- Hay algunas preguntas que se derivan de nuestras exploraciones previas:\n","\n","  - ¿Existen formas más precisas para calcular la derivada? Las que vimos solo son precisas hasta $\\cal O(h^2)$ y en algunos casos hasta $\\cal O(h^4)$.\n","  \n","  - Siempre es posible con una fórmula de baja precisión, por ejemplo $\\cal O(h)$, para encontrar la derivada con la misma precisión que una fórmula $\\cal O(h^2)$ siempre que se use un valor de $h$ lo suficientemente pequeño.  ¿cuánto más pequeño?\n","  \n","  - ¿Podría encontrarse una manera de calcular la derivada con una precisión alta pero usando fórmulas de precisión bajita?"],"metadata":{"id":"TwUvE8NsY9J8"}},{"cell_type":"markdown","source":["### La idea básica"],"metadata":{"id":"IqZPgOLelZ33"}},{"cell_type":"markdown","source":["- El método de extrapolación de Richardson se usa para resolver esas preguntas.\n","\n","- Supongamos que un determinado método numérico (no tiene que ser el de la derivada), que depende de un parámetro $h$, se usa para encontrar **el valor aproximado $N$** de una cantidad cuyo **valor exacto es $M$** y lo hace con una serie del tipo:\n","\n","  $$\n","  M=N(h)+K_1 h + K_2 h^2 + K_3 h^3 + \\cdots\n","  $$\n","\n","- Un ejemplo es la primera derivada:\n","\n","  $$\n","  f^{\\prime}\\left(x_{0}\\right)=\\frac{f\\left(x_{0}\\right)-f\\left(x_{0}-h\\right)}{h}+\\frac{f^{\\prime \\prime}(x_0)}{2} h + \\cdots\n","  $$\n","\n","  En este ejemplo $M$ es la primera derivada, $N$ es la aproximación con diferencias hacia atrás, $K_1=f^{\\prime \\prime}(x_0)/2$.\n","\n","- Nótese que $N$ depende de $h$, por eso la llamaremos $N(h)$.\n","\n","- Adicionalmente $N$ es una fórmula de orden 1, es decir $\\cal O(h^1)$ como lo hemos discutido.  La llamaremos entonces $N_1(h)$.\n","\n","- Supongamos que ahora usamos dos valores de $h$ para aproximar $M$ así:\n","\n","  $$\n","  \\begin{aligned}\n","  M&=N_1(h)+K_1 h + K_2 h^2 + K_3 h^3 + \\cdots\\\\\n","  M&=N_1(h/2)+K_1 (h/2) + K_2 (h/2)^2 + K_3 (h/2)^3 + \\cdots\\\\\n","  \\end{aligned}\n","  $$\n","\n","- Multipliquemos la segunda fórmula por 2:\n","\n","  $$\n","  \\begin{aligned}\n","  M&=N_1(h)+K_1 h + K_2 h^2 + \\cdots\\\\\n","  2M&=2N_1(h/2)+K_1 h + K_2 h^2/2 + \\cdots\\\\\n","  \\end{aligned}\n","  $$\n","\n","- Restemos la segunda fórmula de la primera:\n","\n","  $$\n","  M=2N_1(h/2)-N_1(h)-K_2 h^2/2 + \\cdots\\\\\n","  $$\n","\n","- Si definimos ahora $N_2(h)\\equiv 2N_1(h/2)-N_1(h)$, la fórmula anterior queda:\n","\n","  $$\n","  M=N_2(h)-K_2 h^2/2 + \\cdots\\\\\n","  $$\n","\n","- Es decir, ahora $N_2(h)$ es una fórmula más precisa para calcular $M$ hasta orden $\\cal O(h^2)$.\n","\n"],"metadata":{"id":"AT5e_Ougg_dp"}},{"cell_type":"markdown","source":["### Un ejemplo de extrapolación de Richardson"],"metadata":{"id":"NQUPFUCyivZp"}},{"cell_type":"markdown","source":["- Volvamos sobre el ejemplo que hemos venido trabajando, es decir, calcular el valor de la derivada de $f(x)=\\ln x$ en $x_0=1.8$ con $h=0.1$.\n","\n","- Recordemos que el valor exacto es: $f'(1.8)=0.555555$.\n","\n","- Ya vimos que usando la diferencia hacia adelante obtenemos una precisión baja:"],"metadata":{"id":"IKEw--QflgYy"}},{"cell_type":"code","source":["x=sp.symbols(\"x\")\n","f=sp.log(x)\n","\n","x0=1.8\n","h=0.1\n","\n","#Derivada aproximada\n","fp,Emax,Ea=primera_derivada(f,1.8,h,tipo=\"adelante\")\n","\n","#Error real\n","fpreal=1/x0\n","Ea=abs(fp-fpreal)\n","\n","print(f\"Valor real: {fpreal}\")\n","print(f\"Valor aproximado: {fp}\")\n","print(f\"Error real: {Ea}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TWgCz7Vtl0BF","executionInfo":{"status":"ok","timestamp":1650477658937,"user_tz":300,"elapsed":282,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"686257b6-da21-4dbe-bfec-afe9fef943d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Valor real: 0.5555555555555556\n","Valor aproximado: 0.5406722127027574\n","Error real: 0.014883342852798132\n"]}]},{"cell_type":"markdown","source":["- Para usar la extrapolación de Richardson calculamos la derivada aproximada usando $h$ y $h/2$:"],"metadata":{"id":"SShLNDTSmAYE"}},{"cell_type":"code","source":["#Derivada aproximada\n","N1_h,Emax,Ea=primera_derivada(f,1.8,h,tipo=\"adelante\")\n","N1_h2,Emax,Ea=primera_derivada(f,1.8,h/2,tipo=\"adelante\")"],"metadata":{"id":"2lEFJNlmmlga"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- Ahora los combinamos para producir $N_2(h)=2N_1(h/2)-N_1(h)$ y veamos cuál es el error:"],"metadata":{"id":"Qcd3II_JmqQn"}},{"cell_type":"code","source":["N2_h=2*N1_h2-N1_h\n","Ea=abs(N2_h-fpreal)\n","print(f\"Valor real: {fpreal}\")\n","print(f\"Valor con extrapolación de Richardson: {N2_h}\")\n","print(f\"Error real: {Ea}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0SrEJf9XmyLF","executionInfo":{"status":"ok","timestamp":1650477665364,"user_tz":300,"elapsed":250,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"ca648207-9ed3-42c3-cbc7-e12f551370a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Valor real: 0.5555555555555556\n","Valor con extrapolación de Richardson: 0.5552867548218199\n","Error real: 0.0002688007337356968\n"]}]},{"cell_type":"markdown","source":["- Como vemos ¡el error se redujo muchísimo!.  Esta es una demostración del poder de este método."],"metadata":{"id":"WEHU0q6YnGrd"}},{"cell_type":"markdown","source":["### Extrapolación de Richardson para precisión arbitraria"],"metadata":{"id":"NHx4BDmOn5WZ"}},{"cell_type":"markdown","source":["- En muchas situaciones en métodos numéricos, una cantidad real se puede aproximar usando fórmulas del tipo:\n","\n","  $$\n","  M=N_{1}(h)+K_{1} h^{2}+K_{2} h^{4}+K_{3} h^{6}+\\cdots\n","  $$\n","\n","  es decir, donde todos los términos dependen de potencias pares de $h$.\n","\n","- Este es el caso por ejemplo de la fórmula de la primera derivada con diferencias centrales:\n","\n","  $$\n","  f^{\\prime}\\left(x_{0}\\right)=\\frac{1}{2 h}\\left[f\\left(x_{0}+h\\right)-f\\left(x_{0}-h\\right)\\right]-\\frac{h^{2}}{6} f^{\\prime \\prime \\prime}\\left(x_{0}\\right)-\\frac{h^{4}}{120} f^{(5)}\\left(x_{0}\\right)-\\cdots\n","  $$\n","\n","- Apliquemos una idea similar a la que aplicamos antes:\n","\n","  $$\n","  \\begin{aligned}\n","  M &=N_{1}(h)+K_{1} h^{2}+K_{2} h^{4}+K_{3} h^{6}+\\cdots\\\\\n","  M &=N_{1}(h/2)+K_{1} (h/2)^{2}+K_{2} (h/2)^{4}+K_{3} (h/2)^{6}+\\cdots\\\\\n","  \\end{aligned}\n","  $$\n","\n","- Si multiplicamos por 4 la segunda fórmula entonces queda:\n","\n","  $$\n","  \\begin{aligned}\n","  M &=N_{1}(h)+K_{1} h^{2}+K_{2} h^{4}\\cdots\\\\\n","  4M &=4N_{1}(h/2)+K_{1} h^2+K_{2} h^{4}/4\\cdots\\\\\n","  \\end{aligned}\n","  $$\n","\n","- Restando la segunda de la primera queda:\n","\n","  $$\n","  3M =4N_{1}(h/2)-N_1(h)-3K_{2} h^{4}/4\\cdots\n","  $$\n","\n","- Despejando $M$:\n","\n","  $$\n","  M = N_{1}\\left(\\frac{h}{2}\\right)+\\frac{1}{3}\\left[N_{1}\\left(\\frac{h}{2}\\right)-N_{1}(h)\\right] - 3K_{2} h^{4}/4\\cdots\n","  $$\n","\n","- Si llamamos:\n","\n","  $$\n","  N_2(h) \\equiv N_{1}\\left(\\frac{h}{2}\\right)+\\frac{1}{3}\\left[N_{1}\\left(\\frac{h}{2}\\right)-N_{1}(h)\\right]\n","  $$\n","\n","- Entonces el valor exacto de la cantidad se puede escribir como:\n","\n","  $$\n","  M = N_2(h) - 3K_{2} h^{4}/4\\cdots\n","  $$\n","\n","  es decir $N_2(h)$ es ahora una aproximación de orden $\\cal O(h^4)$ calculada con una aproximación de orden inferior.\n","\n","- Este procedimiento puede continuar para obtener aproximaciones aún mejores usando la fórmula recurrente:\n","\n","  $$\n","  N_{j}(h)=N_{j-1}\\left(\\frac{h}{2}\\right)+\\frac{N_{j-1}(h / 2)-N_{j-1}(h)}{4^{j-1}-1}\n","  $$\n","  que tiene precisión $\\cal O(h^{2j})$."],"metadata":{"id":"XECWq0iqn9l-"}},{"cell_type":"markdown","source":["### Un ejemplo de extrapolación de Richardson de alta precisión"],"metadata":{"id":"qNE3O8kBq6id"}},{"cell_type":"markdown","source":["- Volvamos sobre el ejemplo que hemos venido trabajando, es decir, calcular el valor de la derivada de $f(x)=\\ln x$ en $x_0=1.8$ con $h=0.1$, pero ahora usando la fórmula de diferencia central que tiene un error como el que nos permite aplicar la extrapolación de Richardson de precisión arbitraria.\n","\n","- Para ello podemos escribir la aproximación más precisa:\n","\n","  $$\n","  N_2(h) \\equiv N_{1}\\left(\\frac{h}{2}\\right)+\\frac{1}{3}\\left[N_{1}\\left(\\frac{h}{2}\\right)-N_{1}(h)\\right]\n","  $$"],"metadata":{"id":"POccKc_Cq9rJ"}},{"cell_type":"code","source":["#Derivada aproximada con diferencias centrales\n","N1_h,Emax,Ea=primera_derivada(f,1.8,h,tipo=\"central\")\n","N1_h2,Emax,Ea=primera_derivada(f,1.8,h/2,tipo=\"central\")\n","\n","print(f\"Valor real: {fpreal}\")\n","print(f\"Valor normal: {N1_h}\")\n","print(f\"Error real: {Ea}\")\n","\n","#Extrapolación de Richardson\n","N2_h=N1_h2+(N1_h2-N1_h)/3\n","Ea=abs(N2_h-fpreal)\n","print(f\"Valor con extrapolación de Richardson: {N2_h}\")\n","print(f\"Error real: {Ea}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9KiEAeswrMXk","executionInfo":{"status":"ok","timestamp":1650470098028,"user_tz":300,"elapsed":383,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"44064fc9-c597-4f35-a67a-12c5a5afc8e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Valor real: 0.5555555555555556\n","Valor normal: 0.5561281755511222\n","Error real: 0.00014295599255276237\n","Valor con extrapolación de Richardson: 0.5555552902137704\n","Error real: 2.6534178521053775e-07\n"]}]},{"cell_type":"markdown","source":["- Nótese como la precisión del resultado aumento considerablemente."],"metadata":{"id":"B_IM52UGryzz"}},{"cell_type":"markdown","source":["- Si queremos seguir un paso más y calcular $N_3(h)$ que tiene precisión $\\cal O(h^6)$ la fórmula que usamos sería:\n","\n","  $$\n","  N_{j}(h)=N_{j-1}\\left(\\frac{h}{2}\\right)+\\frac{N_{j-1}(h / 2)-N_{j-1}(h)}{4^{j-1}-1}\n","  $$\n","\n","  aplicandola con $j=3$ queda:\n","\n","  $$\n","  N_{3}(h)=N_{2}\\left(\\frac{h}{2}\\right)+\\frac{N_{2}(h / 2)-N_{2}(h)}{4^2-1}\n","  $$\n","\n","- Pero nótese que ahora tenemos que calcular $N_2(h/2)$ que se obtiene usando:\n","\n","  $$\n","  N_2(h/2) \\equiv N_{1}\\left(h/4\\right)+\\frac{1}{3}\\left[N_{1}\\left(h/4\\right)-N_{1}(h/2)\\right]\n","  $$\n","\n","- Es decir ahora necesitamos calcular $N_1(h/4)$.  Hagámoslo:"],"metadata":{"id":"n1F2olNcr2_S"}},{"cell_type":"code","source":["#Valores de N1 que se necesitan\n","N1_h,Emax,Ea=primera_derivada(f,1.8,h,tipo=\"central\")\n","N1_h2,Emax,Ea=primera_derivada(f,1.8,h/2,tipo=\"central\")\n","N1_h4,Emax,Ea=primera_derivada(f,1.8,h/4,tipo=\"central\")\n","\n","#Valores de N2 que se necesitan\n","N2_h=N1_h2+(N1_h2-N1_h)/3\n","N2_h2=N1_h4+(N1_h4-N1_h2)/3\n","\n","#Extrapolación de Richardson\n","N3_h=N2_h2+(N2_h2-N2_h)/15\n","Ea=abs(N3_h-fpreal)\n","print(f\"Valor con extrapolación de Richardson: {N3_h}\")\n","print(f\"Error real: {Ea}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LSrYcfgtsscp","executionInfo":{"status":"ok","timestamp":1650470419380,"user_tz":300,"elapsed":425,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"2843aad7-9b25-49e5-e762-1dc9c94fa7c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Valor con extrapolación de Richardson: 0.5555555555921273\n","Error real: 3.657174563187482e-11\n"]}]},{"cell_type":"markdown","source":["- El proceso puede continuar y es fácil mostrar que en cada paso en el que se quiere mejorar, es necesario calcular nuevos valores de $N_1$, $N_2$, etc. para distintos valores de $h$ como muestra la siguiente tabla:\n","\n","\\begin{array}{llll}\n","\\hline O\\left(h^{2}\\right) & O\\left(h^{4}\\right) & O\\left(h^{6}\\right) & O\\left(h^{8}\\right) \\\\\n","\\hline \\text { 1: } N_{1}(h) & & & \\\\\n","\\text { 2: } N_{1}\\left(\\frac{h}{2}\\right) & \\text { 3: } N_{2}(h) & & \\\\\n","\\text { 4: } N_{1}\\left(\\frac{h}{4}\\right) & \\text { 5: } N_{2}\\left(\\frac{h}{2}\\right) & \\text { 6: } N_{3}(h) & \\\\\n","\\text { 7: } N_{1}\\left(\\frac{h}{8}\\right) & \\text { 8: } N_{2}\\left(\\frac{h}{4}\\right) & \\text { 9: } N_{3}\\left(\\frac{h}{2}\\right) & \\text { 10: } N_{4}(h)\n","\\end{array}"],"metadata":{"id":"xV9nabMAtBbe"}},{"cell_type":"markdown","source":["### Rutina de extrapolación de Richardson de orden arbitario"],"metadata":{"id":"8ll2Pju6uPKp"}},{"cell_type":"markdown","source":["- La siguiente rutina usa un truco conocido en la programación y es aquel de usar un llamado de una rutina a sí misma:"],"metadata":{"id":"DWudAbUdwP0u"}},{"cell_type":"code","source":["import numpy as np\n","from prettytable import PrettyTable\n","def primera_derivada_richardson(fun,x0,h,j):  \n","  #Valores originales\n","  hori=h\n","  jori=j\n","  \n","  #Tabla de aproximaciones\n","  Ns=np.zeros((j,j))\n","\n","  #Rutina recurrente\n","  def Nj(j,h):\n","    k=int(-np.log2(h/hori))\n","    if j==1:\n","      Nj_h=(fun(x0+h)-fun(x0-h))/(2*h)\n","    else:\n","      Njm1_h2=Nj(j-1,h/2)\n","      Njm1_h=Nj(j-1,h)\n","      Nj_h=Njm1_h2+(Njm1_h2-Njm1_h)/(4**(j-1)-1)\n","    \n","    #Muestra valores y los almacena en la rutina\n","    print(f\"N_{j}(h/{2**k}) = {Nj_h}\")\n","    Ns[k,j-1]=Nj_h\n","    return Nj_h\n","\n","  #Calcula el valor final\n","  Njval=Nj(j,h)\n","\n","  #Construyendo la tabla\n","  head=[]\n","  for j in range(jori):\n","    head+=[f\"O(h^{2*j})\"]\n","  tabla=PrettyTable(head)\n","  #Llena la tabla\n","  for i in range(jori):\n","    row=[]\n","    for j in range(jori):\n","      if j>0 and i>j:\n","        row+=[f\"-\"]\n","      else:\n","        row+=[f\"N_{j+1}(h/{2**(i)}) = {Ns[i,j]}\"]\n","    tabla.add_row(row) \n","  \n","  return Njval,Ns"],"metadata":{"id":"g5NBAOEfuTBD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fp,Ns=primera_derivada_richardson(lambda x:x+np.exp(x),0,0.4,6)\n","Ns,fp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7mvQlCEvueyA","executionInfo":{"status":"ok","timestamp":1650478999294,"user_tz":300,"elapsed":271,"user":{"displayName":"JORGE IVAN ZULUAGA CALLEJAS","userId":"14268130563590845195"}},"outputId":"6221d21c-d517-47db-a557-8adbf577ce07"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["N_1(h/32) = 2.0000260418701155\n","N_1(h/16) = 2.0001041699219235\n","N_2(h/16) = 1.9999999991861794\n","N_1(h/16) = 2.0001041699219235\n","N_1(h/8) = 2.000416718753102\n","N_2(h/8) = 1.9999999869781975\n","N_3(h/8) = 2.000000000000045\n","N_1(h/16) = 2.0001041699219235\n","N_1(h/8) = 2.000416718753102\n","N_2(h/8) = 1.9999999869781975\n","N_1(h/8) = 2.000416718753102\n","N_1(h/4) = 2.001667500198441\n","N_2(h/4) = 1.9999997916046555\n","N_3(h/4) = 2.0000000000031\n","N_4(h/4) = 1.9999999999999964\n","N_1(h/16) = 2.0001041699219235\n","N_1(h/8) = 2.000416718753102\n","N_2(h/8) = 1.9999999869781975\n","N_1(h/8) = 2.000416718753102\n","N_1(h/4) = 2.001667500198441\n","N_2(h/4) = 1.9999997916046555\n","N_3(h/4) = 2.0000000000031\n","N_1(h/8) = 2.000416718753102\n","N_1(h/4) = 2.001667500198441\n","N_2(h/4) = 1.9999997916046555\n","N_1(h/4) = 2.001667500198441\n","N_1(h/2) = 2.00668001270547\n","N_2(h/2) = 1.9999966626960983\n","N_3(h/2) = 2.0000000001985594\n","N_4(h/2) = 1.9999999999999976\n","N_5(h/2) = 1.9999999999999964\n","N_1(h/16) = 2.0001041699219235\n","N_1(h/8) = 2.000416718753102\n","N_2(h/8) = 1.9999999869781975\n","N_1(h/8) = 2.000416718753102\n","N_1(h/4) = 2.001667500198441\n","N_2(h/4) = 1.9999997916046555\n","N_3(h/4) = 2.0000000000031\n","N_1(h/8) = 2.000416718753102\n","N_1(h/4) = 2.001667500198441\n","N_2(h/4) = 1.9999997916046555\n","N_1(h/4) = 2.001667500198441\n","N_1(h/2) = 2.00668001270547\n","N_2(h/2) = 1.9999966626960983\n","N_3(h/2) = 2.0000000001985594\n","N_4(h/2) = 1.9999999999999976\n","N_1(h/8) = 2.000416718753102\n","N_1(h/4) = 2.001667500198441\n","N_2(h/4) = 1.9999997916046555\n","N_1(h/4) = 2.001667500198441\n","N_1(h/2) = 2.00668001270547\n","N_2(h/2) = 1.9999966626960983\n","N_3(h/2) = 2.0000000001985594\n","N_1(h/4) = 2.001667500198441\n","N_1(h/2) = 2.00668001270547\n","N_2(h/2) = 1.9999966626960983\n","N_1(h/2) = 2.00668001270547\n","N_1(h/1) = 2.0268808145070385\n","N_2(h/1) = 1.9999464121049468\n","N_3(h/1) = 2.0000000127355086\n","N_4(h/1) = 1.9999999999995601\n","N_5(h/1) = 1.9999999999999993\n","N_6(h/1) = 1.9999999999999964\n"]},{"output_type":"execute_result","data":{"text/plain":["(array([[2.02688081, 1.99994641, 2.00000001, 2.        , 2.        ,\n","         2.        ],\n","        [2.00668001, 1.99999666, 2.        , 2.        , 2.        ,\n","         0.        ],\n","        [2.0016675 , 1.99999979, 2.        , 2.        , 0.        ,\n","         0.        ],\n","        [2.00041672, 1.99999999, 2.        , 0.        , 0.        ,\n","         0.        ],\n","        [2.00010417, 2.        , 0.        , 0.        , 0.        ,\n","         0.        ],\n","        [2.00002604, 0.        , 0.        , 0.        , 0.        ,\n","         0.        ]]), 1.9999999999999964)"]},"metadata":{},"execution_count":255}]},{"cell_type":"markdown","source":["\n","## Continuará..."],"metadata":{"id":"cYlBNMPp7gA5"}},{"cell_type":"markdown","source":["## Ejercicios"],"metadata":{"id":"1lTKt-iIiK1j"}},{"cell_type":"markdown","source":["- Demostrar la fórmula de diferencias hacia atrás.\n","\n","- Resolver los ejercicios:\n","\n","  - De la sección 4.2: ejercicio 1a, 1d.\n","  - De la sección 4.1: ejercicio 2."],"metadata":{"id":"kcdVGRjJ3GB_"}},{"cell_type":"markdown","source":["-----\n","*Fin*"],"metadata":{"id":"xYzl-QuCIxZr"}}]}